{"version":3,"sources":["../src/services/quotes/sdk.js","../src/services/quotes/index.js","../src/services/google/config.js","../src/services/google/sdk.js","../src/services/google/index.js","../src/utils/index.js","../src/data/data.js","../src/data/index.js","../src/app.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["get_quotes","fetch","request","json","quotes","config","API_KEY","baseURL","get_playlist","id","url","URLSearchParams","set","toString","response","get_playlist_count","count","pageInfo","totalResults","google","format_number","num","format_hour","hour","min","sec","random_number","max","Math","floor","random","distinct_random_number","current","new_random_number","query","document","querySelector","bind","query_all","querySelectorAll","get_by_class","getElementsByClassName","get_by_id","getElementById","create_el","createElement","files","map","file_name","require","player","songs_count","root","utils","loader","current_playlist","quote_display","control_left","control_right","control_play","control_play_icon","control_vol","current_song_button","timer_display","vol_level_key","vol_level","Number","localStorage","getItem","yt_is_playing","getPlayerState","on_vol_input","value","target","setVolume","setItem","oninput","render_loader_ui","classList","remove","add","render_gifs","img","current_gif","gifs_url","length","render_next_gif","new_gif","next_gif_url","src","setTimeout","appendChild","render_timer","timer","current_time","init","on_update_timer","update_timer","date","Date","hours","getHours","getSeconds","getMinutes","textContent","render_quote","all_quotes","current_quote","text","render_player_ui","is_playing","toggle_player_state","pauseVideo","playVideo","play_random_song","loadPlaylist","list","listType","index","startSeconds","suggestedQuality","render_controls","onclick","previousVideo","nextVideo","ondblclick","onchange","reinitialize_player","render_components","init_player","on_player_ready","e","on_player_state_change","setAttribute","playerInfo","videoUrl","YT","Player","height","width","playerVars","controls","autoplay","events","onReady","onStateChange","destroy","window","onload","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","replace","exports","bundle","updateLink","link","newLink","cloneNode","href","split","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","i","module"],"mappings":"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,OAAJ,CNXc,CMWD;AACX,ACDH,APXe,AHJC,aSgBNG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB,kCNZe,iBAAOjJ,EAAP;AMahB,AFXL,AJFqB,AHJF,AKEnB,IAAMiB,aAAa,ELDKzB,CKCF,ILDO,CAAC,IKCxByB,IDCDP,AHAAf,SIDiB,CAACuB,GAAD,EAAMH,GAAN,GLDO,CADV;ASkBhB,ACDDmJ,APbmB,AEFC,EKepBA,OLdA/I,GKcU,CLdN,CAACC,CKcQ6D,ILdb,CAAW9D,IAAI,CKcQ,ALdPE,CKcQ,KLdb,MAAiBH,CKcQ,ELdL,GAAGH,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CADoB;AKgBlB,AHXJ,AJHqB,AHJF,AKEG,CAAtB,OKgBQqJ,KAAK,GAAG1I,QAAQ,CAACI,gBAAT,CAA0B,wBAA1B,CAAZ;ADEF,ADZF,ALJqB,AHHbrC,SSmBC,GAAP,ATnBMA,OADW;ASqBlB,ACFG,AFVJ,ADDA,AJJqB,AHJF,SUmBV,IAAI4K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACxF,MAA1B,EAAkCyF,CAAC,EAAnC,EAAuC;AACrC,AFVN,ALLQpK,AHLW,UUoBTsJ,EPfFtJ,GADa,COgBL,CAACmJ,CPfH,CHFS3J,GGELS,IHFY,CUiBpB,AVjBqBR,CUiBH0K,GVjBL,EUiBU,AVpBd,CUoBeC,CAAD,CAAL,CAAST,APfvB,EADO,EOgBX,MAAqCL,MAAM,CAACT,YAAP,EAAzC,EAAgE;ADGtE,ACFQU,AFVR,ADFA,AJFEvJ,AEFF,IGMIwC,AHNEnB,IKgBEkI,CDECJ,CDZC,ELJRnJ,CKIW,ELJR,CAACE,CKIN,CEUkB,CDElB,ACFmBiK,APdjB,CMgBkBnK,ANhBV,GMgBV,CCFwB,CDEC,ACFAoK,CAAD,ALhBI,CKgBV,CAAV,CLhBuB,GFE7B,EAAsBrK,EAAtB,EEFIsB,sBAAyB,CAACJ,GAAD,EAAMH,GAAN,EAAWQ,OAAX,EAAuB;AImBpD,ACFK,AFVP,ALJEtB,AHRiB,AKMjB,IGMEyC,EHNElB,GIkBG,CAAC,ENhBRvB,GMgBaA,ADZf,ALJK,CAACE,CKMN,CCUS,CNhBP,CMgBkBkJ,ANhBV,GEFa,EFErB,CEFwBpI,CIkBjB,ANhBQrB,CMgBW,WJlBW,CAACsB,GFEhBrB,AEFe,EAAMkB,GAAN,CAArC,CFEA,gDMgBO,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,AFRL,ADLA,AJDEd,AHNMN,YGMNM,AHNMN,GGMH,CAACQ,EHTa,CGSjB,CAAQ,MAAR,EAAgB,IAAhB;AKOF,ALZqB,AHJF,AKOjB,SAAOqB,iBAAiB,KAAKD,OAA7B,EAAsC,KLF/B5B,MALU;AS2BnB2J,ACFIY,AFPJ,ADPA,AJPqB,AEIjB,IKiBAA,GDEG,CAACpB,GJnBGxH,GKiBG,GAAG,EPdO9B,CMgBxB,CCFI,EDEmBqJ,CNhBM,CAAC/I,OAAO,CEHJ,CAACoB,CFGM,EEHP,CFGH,CEHSH,EImBvC,ANhB8Cd,CEHb,EFGgB,AEHLsB,CFGMnB,MEHjB,CAA7B,CFG0C,EAAjB,CAPR;AMwBrBkJ,ACFG,AV1BgB,AKShB,GKQsB,EASpB,EDEE,ACXkB,CDWjBF,ACXN,UDWF,GAAqBA,UAArB;ACDC,AFRD,ADPA,AJRqB,AHJF,IQmBbzG,IAAI,GAAGC,KAAK,CAACX,SAAN,CAAgB,MAAhB,CAAb,EAEA;ALVQxC,AHXW,AKUjB,SAAO+B,GFCD/B,OAPa,OEMnB;AKmBF6K,AFPA,ADTA,AJTqB,AHJF,AKWlB,CAND,GGiBMzH,EEOA,CAACyG,GFPK,GAAG1G,CEOf,GAAiBuH,CFPG,CAAC1I,KAAN,CAAY,CEO3B,QFPe,CAAf,EAEA;ALpBqB,AHJF,mBGaMhC,OAAO,CAACC,IAAR,EATJ;AKqBrB,ADXA,APdmB,IQyBboD,gBAAgB,GAAGF,KAAK,CAACX,SAAN,CAAgB,cAAhB,CAAzB,EAEA;ALvBqB,AHJF,AKanB,GLbgB,CKaVR,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAd;AGeA,ADbA,AJFQrB,IKeF0C,QLfE1C,KKeW,GAAGuC,ALxBD,KKwBM,CAACX,SAAN,CAAgB,OAAhB,CAAtB,EAEA;AL1BqB,AHJL,AKchB,IAAMJ,SAAS,GAAGH,ELdZnC,MKcoB,CAACuC,GLd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","file":"app.581aa3f0.js","sourceRoot":"../public","sourcesContent":["const get_quotes = async () => {\n  const request = await fetch(\"https://type.fit/api/quotes\");\n\n  const quotes = await request.json();\n\n  return quotes;\n};\n\nexport { get_quotes };\n","import * as quotes from \"./sdk\";\n\nexport default {\n  ...quotes,\n};\n","const config = {\n  API_KEY: process.env.GOOGLE_API_KEY,\n};\n\nexport default config;\n","import config from \"./config\";\n\nconst baseURL = \"https://www.googleapis.com/youtube/v3/playlistItems\";\n\nconst get_playlist = async (id) => {\n  const url = new URLSearchParams();\n\n  url.set(\"playlistId\", id);\n  url.set(\"key\", config.API_KEY);\n  url.set(\"part\", \"id\");\n\n  const request = await fetch(baseURL + \"?\" + url.toString());\n\n  const response = await request.json();\n\n  return response;\n};\n\nconst get_playlist_count = async (id) => {\n  const response = await get_playlist(id);\n\n  const count = response.pageInfo.totalResults;\n\n  return count;\n};\n\nexport { get_playlist, get_playlist_count };\n","import * as google from \"./sdk\";\n\nexport default {\n  ...google,\n};\n","const format_number = (num) => (num >= 10 ? num : `0${num}`);\nconst format_hour = (hour, min, sec) => `${hour}:${min}:${sec}`;\nconst random_number = (max, min) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nconst distinct_random_number = (max, min, current) => {\n  let new_random_number = random_number(max, min);\n  while (new_random_number === current) {\n    return distinct_random_number(max, min, current);\n  }\n  return new_random_number;\n};\n\nconst query = document.querySelector.bind(document);\nconst query_all = document.querySelectorAll.bind(document);\nconst get_by_class = document.getElementsByClassName.bind(document);\nconst get_by_id = document.getElementById.bind(document);\nconst create_el = document.createElement.bind(document);\n\nexport {\n  format_number,\n  format_hour,\n  random_number,\n  distinct_random_number,\n  query,\n  query_all,\n  get_by_class,\n  get_by_id,\n  create_el,\n};\n","export default [\n  \"amp_prob.gif\",\n  \"attack.gif\",\n  \"bad_landing.gif\",\n  \"bicycle.gif\",\n  \"blade.gif\",\n  \"bluebalcony.gif\",\n  \"bridge.gif\",\n  \"bridge_raining.gif\",\n  \"cacao_and_coffee_shop.gif\",\n  \"castle.gif\",\n  \"cave.gif\",\n  \"cemetry.gif\",\n  \"citymirror.gif\",\n  \"coast.gif\",\n  \"coffeeinrain.gif\",\n  \"comition_sky_left_to_right.gif\",\n  \"controlroom.gif\",\n  \"daftpunk.gif\",\n  \"dark_pillar.gif\",\n  \"dawn.gif\",\n  \"drift.gif\",\n  \"droidcrime.gif\",\n  \"echoesfromneals.gif\",\n  \"elderorc.gif\",\n  \"exodus.gif\",\n  \"factory5.gif\",\n  \"falls.gif\",\n  \"familydinner.gif\",\n  \"fire.gif\",\n  \"flower_shop.gif\",\n  \"forrest.gif\",\n  \"fortress.gif\",\n  \"future.gif\",\n  \"girlinrain.gif\",\n  \"grandcanyon.gif\",\n  \"highfloor.gif\",\n  \"highlands.gif\",\n  \"highsoceity.gif\",\n  \"horse.gif\",\n  \"iplayoldgames.gif\",\n  \"jazznight.gif\",\n  \"lake.gif\",\n  \"last_dance.gif\",\n  \"lowlands.gif\",\n  \"lullaby.gif\",\n  \"metro_final.gif\",\n  \"midnight_melancholy.gif\",\n  \"moon.png\",\n  \"motorcycle.gif\",\n  \"mountain.gif\",\n  \"mountain_mote.gif\",\n  \"nature.gif\",\n  \"nero_land.gif\",\n  \"nightlytraining.gif\",\n  \"nighttrain.gif\",\n  \"northlights.gif\",\n  \"pilot.gif\",\n  \"player2.gif\",\n  \"rain.gif\",\n  \"redbicycle.gif\",\n  \"reddriver.gif\",\n  \"ride.gif\",\n  \"robot_alley.gif\",\n  \"sandcastle.gif\",\n  \"sea.gif\",\n  \"shootingstars.gif\",\n  \"shop.gif\",\n  \"sideshop.gif\",\n  \"skate.gif\",\n  \"snow.gif\",\n  \"spacecommander.gif\",\n  \"spaceport.gif\",\n  \"stacking_houses_on_a_windy_day.gif\",\n  \"streets.gif\",\n  \"sushi.gif\",\n  \"swamp.gif\",\n  \"swirling.gif\",\n  \"temple.gif\",\n  \"thieves.gif\",\n  \"tower.gif\",\n  \"town.gif\",\n  \"train.gif\",\n  \"train_city.gif\",\n  \"troll_cave.gif\",\n  \"tv.gif\",\n  \"underwater.gif\",\n  \"virtuaverse.gif\",\n  \"wild_boy.gif\",\n  \"windyday.gif\",\n  \"youngatnight.gif\",\n  \"zombies.gif\",\n];\n","import \"../assets/amp_prob.gif\";\nimport \"../assets/attack.gif\";\nimport \"../assets/bad_landing.gif\";\nimport \"../assets/bicycle.gif\";\nimport \"../assets/blade.gif\";\nimport \"../assets/bluebalcony.gif\";\nimport \"../assets/bridge.gif\";\nimport \"../assets/bridge_raining.gif\";\nimport \"../assets/cacao_and_coffee_shop.gif\";\nimport \"../assets/castle.gif\";\nimport \"../assets/cave.gif\";\nimport \"../assets/cemetry.gif\";\nimport \"../assets/citymirror.gif\";\nimport \"../assets/coast.gif\";\nimport \"../assets/coffeeinrain.gif\";\nimport \"../assets/comition_sky_left_to_right.gif\";\nimport \"../assets/controlroom.gif\";\nimport \"../assets/daftpunk.gif\";\nimport \"../assets/dark_pillar.gif\";\nimport \"../assets/dawn.gif\";\nimport \"../assets/drift.gif\";\nimport \"../assets/droidcrime.gif\";\nimport \"../assets/echoesfromneals.gif\";\nimport \"../assets/elderorc.gif\";\nimport \"../assets/exodus.gif\";\nimport \"../assets/factory5.gif\";\nimport \"../assets/falls.gif\";\nimport \"../assets/familydinner.gif\";\nimport \"../assets/fire.gif\";\nimport \"../assets/flower_shop.gif\";\nimport \"../assets/forrest.gif\";\nimport \"../assets/fortress.gif\";\nimport \"../assets/future.gif\";\nimport \"../assets/girlinrain.gif\";\nimport \"../assets/grandcanyon.gif\";\nimport \"../assets/highfloor.gif\";\nimport \"../assets/highlands.gif\";\nimport \"../assets/highsoceity.gif\";\nimport \"../assets/horse.gif\";\nimport \"../assets/iplayoldgames.gif\";\nimport \"../assets/jazznight.gif\";\nimport \"../assets/lake.gif\";\nimport \"../assets/last_dance.gif\";\nimport \"../assets/lowlands.gif\";\nimport \"../assets/lullaby.gif\";\nimport \"../assets/metro_final.gif\";\nimport \"../assets/midnight_melancholy.gif\";\nimport \"../assets/moon.png\";\nimport \"../assets/motorcycle.gif\";\nimport \"../assets/mountain.gif\";\nimport \"../assets/mountain_mote.gif\";\nimport \"../assets/nature.gif\";\nimport \"../assets/nero_land.gif\";\nimport \"../assets/nightlytraining.gif\";\nimport \"../assets/nighttrain.gif\";\nimport \"../assets/northlights.gif\";\nimport \"../assets/pilot.gif\";\nimport \"../assets/player2.gif\";\nimport \"../assets/rain.gif\";\nimport \"../assets/redbicycle.gif\";\nimport \"../assets/reddriver.gif\";\nimport \"../assets/ride.gif\";\nimport \"../assets/robot_alley.gif\";\nimport \"../assets/sandcastle.gif\";\nimport \"../assets/sea.gif\";\nimport \"../assets/shootingstars.gif\";\nimport \"../assets/shop.gif\";\nimport \"../assets/sideshop.gif\";\nimport \"../assets/skate.gif\";\nimport \"../assets/snow.gif\";\nimport \"../assets/spacecommander.gif\";\nimport \"../assets/spaceport.gif\";\nimport \"../assets/stacking_houses_on_a_windy_day.gif\";\nimport \"../assets/streets.gif\";\nimport \"../assets/sushi.gif\";\nimport \"../assets/swamp.gif\";\nimport \"../assets/swirling.gif\";\nimport \"../assets/temple.gif\";\nimport \"../assets/thieves.gif\";\nimport \"../assets/tower.gif\";\nimport \"../assets/town.gif\";\nimport \"../assets/train.gif\";\nimport \"../assets/train_city.gif\";\nimport \"../assets/troll_cave.gif\";\nimport \"../assets/tv.gif\";\nimport \"../assets/underwater.gif\";\nimport \"../assets/virtuaverse.gif\";\nimport \"../assets/wild_boy.gif\";\nimport \"../assets/windyday.gif\";\nimport \"../assets/youngatnight.gif\";\nimport \"../assets/zombies.gif\";\n\nimport files from \"./data\";\n\nexport default files.map((file_name) => require(`../assets/${file_name}`));\n","import \"./scss/app.scss\";\n\nimport quotes from \"./services/quotes\";\nimport google from \"./services/google\";\n\nimport * as utils from \"./utils\";\nimport gifs_url from \"./data\";\n\n// ========================================================================================\n// PLAYER VAR FOR YOUTUBE API IFRAME\n// ========================================================================================\nlet player = null;\nlet songs_count;\n\n// ========================================================================================\n// ALL NECESSARY NODE ELEMENTS\n// ========================================================================================\n\n// For root\nconst root = utils.get_by_id(\"main\");\n\n// For loader\nconst loader = utils.query(\".loader\");\n\n// For select change current playlist\nconst current_playlist = utils.get_by_id(\"playlist__id\");\n\n// For quote\nconst quote_display = utils.get_by_id(\"quote\");\n\n// For controls\nconst control_left = utils.query(\".buttons-wrapper.left\");\nconst control_right = utils.query(\".buttons-wrapper.right\");\nconst control_play = utils.query(\".buttons-wrapper.play\");\nconst control_play_icon = utils.query(\".button-play\");\nconst control_vol = utils.get_by_id(\"button-vol-input\");\n\n// For current song external link\nconst current_song_button = utils.get_by_id(\"current-song\");\n\n// For timer\nconst timer_display = utils.get_by_id(\"timer\");\n\n// For volume\nconst vol_level_key = \"app__vol__level\";\nlet vol_level = Number(localStorage.getItem(vol_level_key)) || 100;\n\n// ========================================================================================\n// WRAPPER FUNCTION TO GET PLAYER STATE, IF IS PLAYING OR NOT\n// ========================================================================================\nconst yt_is_playing = () => player.getPlayerState() === 1;\n\n// ========================================================================================\n// ADD VOLUMEN CHANGE LISTENER TO SET YOUTUBE IFRAME API\n// ========================================================================================\nconst on_vol_input = ({ target: { value } }) => {\n  if (!player) return;\n\n  vol_level = value;\n\n  player.setVolume(vol_level);\n\n  localStorage.setItem(vol_level_key, value);\n};\ncontrol_vol.value = vol_level;\ncontrol_vol.oninput = on_vol_input;\n\n// ========================================================================================\n// MANAGE CLASS TO LOADER TAG TO HIDE OR SHOW FROM UI\n// ========================================================================================\nconst render_loader_ui = () => {\n  if (yt_is_playing()) {\n    loader.classList.remove(\"loading\");\n    loader.classList.add(\"static\");\n    return;\n  }\n\n  loader.classList.remove(\"static\");\n  loader.classList.add(\"loading\");\n};\n\n// ========================================================================================\n// RENDER GIF IN A IMG TAG AND ADD LOOP TO EVERY 5S CHANGE GIF\n// ========================================================================================\nconst render_gifs = () => {\n  const img = utils.create_el(\"img\");\n\n  let current_gif = utils.random_number(0, gifs_url.length - 1);\n\n  const render_next_gif = () => {\n    const new_gif = utils.random_number(0, gifs_url.length - 1);\n\n    current_gif = new_gif;\n\n    const next_gif_url = gifs_url[current_gif];\n\n    img.src = next_gif_url;\n\n    setTimeout(render_next_gif, 5000);\n  };\n  render_next_gif();\n\n  root.appendChild(img);\n};\n\n// ========================================================================================\n// INIT TIMER OBJECT AND ADD LISTENER TO EVERY SECOND TO UPDATE TIMER DISPLAY\n// ========================================================================================\nconst render_timer = () => {\n  // ========================================================================================\n  // OBJECT TO MANAGER TIME, USED BY RENDER_TIMER() FUNCTION\n  // ========================================================================================\n  const timer = {\n    current_time: null,\n    init(on_update_timer) {\n      this.on_update_timer = on_update_timer;\n      this.update_timer();\n    },\n    update_timer() {\n      const date = new Date();\n\n      const hours = utils.format_number(date.getHours());\n      const sec = utils.format_number(date.getSeconds());\n      const min = utils.format_number(date.getMinutes());\n\n      this.current_time = utils.format_hour(hours, min, sec);\n      this.on_update_timer(this);\n\n      setTimeout(() => this.update_timer(), 1000);\n    },\n  };\n\n  const on_update_timer = ({ current_time }) =>\n    (timer_display.textContent = current_time);\n\n  timer.init(on_update_timer);\n};\n\n// ========================================================================================\n// GET A RANDOM QUOTE FROM OVER 1000 API QUOTES\n// ========================================================================================\nconst render_quote = async () => {\n  const all_quotes = await quotes.get_quotes();\n\n  const current_quote =\n    all_quotes[utils.random_number(0, gifs_url.length - 1)].text;\n\n  quote_display.textContent = current_quote;\n};\n\n// ========================================================================================\n// ADD FUNCIONALITY TO PLAYER : LEFT TO PLAY PREVIOUS SONG, AND RIGHT TO PLAY NEXT SONG\n// ========================================================================================\nconst render_player_ui = () => {\n  const is_playing = yt_is_playing();\n\n  control_play_icon.classList.add(is_playing ? \"playing\" : \"paused\");\n  control_play_icon.classList.remove(is_playing ? \"paused\" : \"playing\");\n};\n\nconst toggle_player_state = () => {\n  if (!player) return;\n\n  const is_playing = player.getPlayerState() === 1;\n\n  is_playing ? player.pauseVideo() : player.playVideo();\n};\n\nconst play_random_song = () => {\n  if (!player || !songs_count) return;\n\n  player.loadPlaylist({\n    list: current_playlist.value,\n    listType: \"playlist\",\n    index: utils.random_number(0, songs_count - 1),\n    startSeconds: 0,\n    suggestedQuality: \"small\",\n  });\n};\n\nconst render_controls = () => {\n  control_left.onclick = () => player && player.previousVideo();\n  control_right.onclick = () => player && player.nextVideo();\n  control_play.onclick = () => toggle_player_state();\n  control_play.ondblclick = () => player && play_random_song();\n  current_playlist.onchange = async () => await reinitialize_player();\n};\n\n// ========================================================================================\n// WRAPPER FUNCTION TO RENDER ALL MAIN UI COMPONENTS\n// ========================================================================================\nconst render_components = () => {\n  render_timer();\n  render_quote();\n  render_controls();\n};\n\n// ========================================================================================\n// FUNCTION TO INIT PLAYER FUNCTIONALITY USING YOUTUBE IFRAME API\n// ========================================================================================\nconst init_player = async () => {\n  songs_count = await google.get_playlist_count(current_playlist.value);\n\n  const on_player_ready = (e) => {\n    e.target.loadPlaylist({\n      list: current_playlist.value,\n      listType: \"playlist\",\n      index: utils.random_number(0, songs_count - 1),\n      startSeconds: 0,\n      suggestedQuality: \"small\",\n    });\n  };\n\n  const on_player_state_change = (e) => {\n    // To set the current song/video URL in external link \"current song\"\n    current_song_button.setAttribute(\"href\", e.target.playerInfo.videoUrl);\n\n    render_loader_ui();\n    render_player_ui();\n\n    player.setVolume(vol_level);\n  };\n\n  player = new YT.Player(\"player\", {\n    height: \"300\",\n    width: \"300\",\n    playerVars: {\n      controls: \"0\",\n      autoplay: \"1\",\n    },\n    events: {\n      onReady: on_player_ready,\n      onStateChange: on_player_state_change,\n    },\n  });\n};\n\n// ========================================================================================\n// FUNCTION TO REINITIALIZE PLAYER WITH OTHER PLAYLIST\n// ========================================================================================\nconst reinitialize_player = async () => {\n  if (!player) return;\n\n  player.destroy();\n\n  return await init_player();\n};\n\n// ========================================================================================\n// LOADS COMPONENTS ASYNCHRONALLY WHEN WINDOW IS LOADED\n// ========================================================================================\nconst init = async () => {\n  await render_gifs();\n  await render_components();\n  await init_player();\n};\n\nwindow.onload = init;\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}